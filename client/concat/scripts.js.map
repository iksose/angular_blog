{"version":3,"file":"scripts.js","sources":["scripts.js","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","sourcesContent":["// Make sure to include the `ui.router` module as a dependency\nangular.module('uiRouterSample', ['ui.router', 'ngAnimate',\n  'ngResource', 'ui.bootstrap',\n  'chieffancypants.loadingBar', 'textAngular'])\n    .run(\n      [        '$rootScope', '$state', '$stateParams',\n      function ($rootScope,   $state,   $stateParams) {\n\n        // It's very handy to add references to $state and $stateParams to the $rootScope\n        // so that you can access them from any scope within your applications.For example,\n        // <li ui-sref-active=\"active }\"> will set the <li> // to active whenever\n        // 'contacts.list' or one of its decendents is active.\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n      }]);\n// Make sure to include the `ui.router` module as a dependency.\nangular.module('uiRouterSample')\n  .config(\n    [          '$stateProvider', '$urlRouterProvider',\n      function ($stateProvider,   $urlRouterProvider) {\n\n        /////////////////////////////\n        // Redirects and Otherwise //\n        /////////////////////////////\n\n        // Use $urlRouterProvider to configure any redirects (when) and invalid urls (otherwise).\n        $urlRouterProvider\n\n          // The `when` method says if the url is ever the 1st param, then redirect to the 2nd param\n          // Here we are just setting up some convenience urls.\n          .when('/c?id', '/contacts/:id')\n          .when('/user/:id', '/contacts/:id')\n\n          // If the url is ever invalid, e.g. '/asdf', then redirect to '/' aka the home state\n          .otherwise('/');\n\n\n        //////////////////////////\n        // State Configurations //\n        //////////////////////////\n\n        // Use $stateProvider to configure your states.\n        $stateProvider\n\n          //////////\n          // Home //\n          //////////\n\n          .state(\"home\", {\n\n            // Use a url of \"/\" to set a states as the \"index\".\n            url: \"/\",\n\n            // Example of an inline template string. By default, templates\n            // will populate the ui-view within the parent state's template.\n            // For top level states, like this one, the parent template is\n            // the index.html file. So this template will be inserted into the\n            // ui-view within index.html.\n            template: '<p class=\"lead\">Welcome to the UI-Router Demo</p>' +\n              '<p>Use the menu above to navigate. ' +\n              'Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p>' +\n              '<p>Click these links—<a href=\"#/c?id=1\">Alice</a> or ' +\n              '<a href=\"#/user/42\">Bob</a>—to see a url redirect in action.</p>',\n            controller: ['$scope', '$state', '$http', 'utils',\n              function (  $scope,   $state,   $http,   utils, $resource) {\n\n                // Add a 'contacts' field in this abstract parent's scope, so that all\n                // child state views can access it in their scopes. Please note: scope\n                // inheritance is not due to nesting of states, but rather choosing to\n                // nest the templates of those states. It's normal scope inheritance.\n\n                  console.log(\"Welcome home\")\n\n              }]\n\n          })\n\n          //////////////\n          // Contacts //\n          //////////////\n\n          .state('contacts', {\n\n            // With abstract set to true, that means this state can not be explicitly activated.\n            // It can only be implicitly activated by activating one of it's children.\n            // abstract: true,\n\n            // This abstract state will prepend '/contacts' onto the urls of all its children.\n            url: '/contacts',\n\n            // Example of loading a template from a file. This is also a top level state,\n            // so this template file will be loaded and then inserted into the ui-view\n            // within index.html.\n            templateUrl: 'views/contacts.html',\n\n            // Use `resolve` to resolve any asynchronous controller dependencies\n            // *before* the controller is instantiated. In this case, since contacts\n            // returns a promise, the controller will wait until contacts.all() is\n            // resolved before instantiation. Non-promise return values are considered\n            // to be resolved immediately.\n            resolve: {\n              contacts: ['contacts',\n                function( contacts){\n                  return contacts.all();\n                }]\n            },\n\n            // You can pair a controller to your template. There *must* be a template to pair with.\n            controller: ['$scope', '$state', 'contacts', 'utils',\n              function (  $scope,   $state,   contacts,   utils) {\n\n                // Add a 'contacts' field in this abstract parent's scope, so that all\n                // child state views can access it in their scopes. Please note: scope\n                // inheritance is not due to nesting of states, but rather choosing to\n                // nest the templates of those states. It's normal scope inheritance.\n                $scope.contacts = contacts;\n\n                $scope.goToRandom = function () {\n                  var randId = utils.newRandomKey($scope.contacts, \"id\", $state.params.contactId);\n\n                  // $state.go() can be used as a high level convenience method\n                  // for activating a state programmatically.\n                  $state.go('contacts.detail', { contactId: randId });\n                };\n              }]\n          })\n\n          /////////////////////\n          // Contacts > List //\n          /////////////////////\n\n          // Using a '.' within a state name declares a child within a parent.\n          // So you have a new state 'list' within the parent 'contacts' state.\n          .state('contacts.list', {\n\n            // Using an empty url means that this child state will become active\n            // when its parent's url is navigated to. Urls of child states are\n            // automatically appended to the urls of their parent. So this state's\n            // url is '/contacts' (because '/contacts' + '').\n            url: '',\n\n            // IMPORTANT: Now we have a state that is not a top level state. Its\n            // template will be inserted into the ui-view within this state's\n            // parent's template; so the ui-view within contacts.html. This is the\n            // most important thing to remember about templates.\n            templateUrl: 'views/contacts.list.html'\n          })\n\n          ///////////////////////\n          // Contacts > Detail //\n          ///////////////////////\n\n          // You can have unlimited children within a state. Here is a second child\n          // state within the 'contacts' parent state.\n          .state('contacts.detail', {\n\n            // Urls can have parameters. They can be specified like :param or {param}.\n            // If {} is used, then you can also specify a regex pattern that the param\n            // must match. The regex is written after a colon (:). Note: Don't use capture\n            // groups in your regex patterns, because the whole regex is wrapped again\n            // behind the scenes. Our pattern below will only match numbers with a length\n            // between 1 and 4.\n\n            // Since this state is also a child of 'contacts' its url is appended as well.\n            // So its url will end up being '/contacts/{contactId:[0-9]{1,8}}'. When the\n            // url becomes something like '/contacts/42' then this state becomes active\n            // and the $stateParams object becomes { contactId: 42 }.\n            url: '/{contactId:[0-9]{1,4}}',\n\n            // If there is more than a single ui-view in the parent template, or you would\n            // like to target a ui-view from even higher up the state tree, you can use the\n            // views object to configure multiple views. Each view can get its own template,\n            // controller, and resolve data.\n\n            // View names can be relative or absolute. Relative view names do not use an '@'\n            // symbol. They always refer to views within this state's parent template.\n            // Absolute view names use a '@' symbol to distinguish the view and the state.\n            // So 'foo@bar' means the ui-view named 'foo' within the 'bar' state's template.\n            views: {\n\n              // So this one is targeting the unnamed view within the parent state's template.\n              '': {\n                templateUrl: 'views/contacts.detail.html',\n                controller: ['$scope', '$stateParams', 'utils',\n                  function (  $scope,   $stateParams,   utils) {\n                    $scope.contact = utils.findById($scope.contacts, $stateParams.contactId);\n                  }]\n              },\n\n              // This one is targeting the ui-view=\"hint\" within the unnamed root, aka index.html.\n              // This shows off how you could populate *any* view within *any* ancestor state.\n              'hint@': {\n                template: 'This is contacts.detail populating the \"hint\" ui-view'\n              },\n\n              // This one is targeting the ui-view=\"menu\" within the parent state's template.\n              'menuTip': {\n                // templateProvider is the final method for supplying a template.\n                // There is: template, templateUrl, and templateProvider.\n                templateProvider: ['$stateParams',\n                  function (        $stateParams) {\n                    // This is just to demonstrate that $stateParams injection works for templateProvider.\n                    // $stateParams are the parameters for the new state we're transitioning to, even\n                    // though the global '$stateParams' has not been updated yet.\n                    return '<hr><small class=\"muted\">Contact ID: ' + $stateParams.contactId + '</small>';\n                  }]\n              }\n            }\n          })\n\n          //////////////////////////////\n          // Contacts > Detail > Item //\n          //////////////////////////////\n\n          .state('contacts.detail.item', {\n\n            // So following what we've learned, this state's full url will end up being\n            // '/contacts/{contactId}/item/:itemId'. We are using both types of parameters\n            // in the same url, but they behave identically.\n            url: '/item/:itemId',\n            views: {\n\n              // This is targeting the unnamed ui-view within the parent state 'contact.detail'\n              // We wouldn't have to do it this way if we didn't also want to set the 'hint' view below.\n              // We could instead just set templateUrl and controller outside of the view obj.\n              '': {\n                templateUrl: 'views/contacts.detail.item.html',\n                controller: ['$scope', '$stateParams', '$state', 'utils',\n                  function (  $scope,   $stateParams,   $state,   utils) {\n                    $scope.item = utils.findById($scope.contact.items, $stateParams.itemId);\n\n                    $scope.edit = function () {\n                      // Here we show off go's ability to navigate to a relative state. Using '^' to go upwards\n                      // and '.' to go down, you can navigate to any relative state (ancestor or descendant).\n                      // Here we are going down to the child state 'edit' (full name of 'contacts.detail.item.edit')\n                      $state.go('.edit', $stateParams);\n                    };\n                  }]\n              },\n\n              // Here we see we are overriding the template that was set by 'contact.detail'\n              'hint@': {\n                template: ' This is contacts.detail.item overriding the \"hint\" ui-view'\n              }\n            }\n          })\n\n          /////////////////////////////////////\n          // Contacts > Detail > Item > Edit //\n          /////////////////////////////////////\n\n          // Notice that this state has no 'url'. States do not require a url. You can use them\n          // simply to organize your application into \"places\" where each \"place\" can configure\n          // only what it needs. The only way to get to this state is via $state.go (or transitionTo)\n          .state('views/contacts.detail.item.edit', {\n            views: {\n\n              // This is targeting the unnamed view within the 'contact.detail' state\n              // essentially swapping out the template that 'contact.detail.item' had\n              // had inserted with this state's template.\n              '@contacts.detail': {\n                templateUrl: 'contacts.detail.item.edit.html',\n                controller: ['$scope', '$stateParams', '$state', 'utils',\n                  function (  $scope,   $stateParams,   $state,   utils) {\n                    $scope.item = utils.findById($scope.contact.items, $stateParams.itemId);\n                    $scope.done = function () {\n                      // Go back up. '^' means up one. '^.^' would be up twice, to the grandparent.\n                      $state.go('^', $stateParams);\n                    };\n                  }]\n              }\n            }\n          })\n\n          ///////////\n          // About //\n          ///////////\n\n          .state('about', {\n            url: '/about',\n\n            // Showing off how you could return a promise from templateProvider\n            templateProvider: ['$timeout',\n              function (        $timeout) {\n                return $timeout(function () {\n                  return '<p class=\"lead\">UI-Router Resources</p><ul>' +\n                           '<li><a href=\"https://github.com/angular-ui/ui-router/tree/master/sample\">Source for this Sample</a></li>' +\n                           '<li><a href=\"https://github.com/angular-ui/ui-router\">Github Main Page</a></li>' +\n                           '<li><a href=\"https://github.com/angular-ui/ui-router#quick-start\">Quick Start</a></li>' +\n                           '<li><a href=\"https://github.com/angular-ui/ui-router/wiki\">In-Depth Guide</a></li>' +\n                           '<li><a href=\"https://github.com/angular-ui/ui-router/wiki/Quick-Reference\">API Reference</a></li>' +\n                         '</ul>';\n                }, 100);\n              }]\n          })\n\n          .state('database',{\n            url: '/database',\n            templateUrl: 'views/database.html',\n            controller: 'dbController'\n          })\n          .state('blog',{\n            url: '/blog',\n            templateUrl: 'views/blog.html',\n            controller: 'blogController'\n          })\n          .state('bloglist',{\n            url: '/bloglist',\n            templateUrl: 'views/bloglist.html',\n            controller: 'blogController'\n          })\n          .state('post',{\n            url: '/post/:title',\n            templateUrl: 'views/bloglist.post.html',\n            controller: 'blogController_individual'\n          })\n          .state('newPost',{\n            url: '/newPost',\n            templateUrl: 'views/newpost.html',\n            controller: 'blogController_newPost'\n          })\n\n\n\n      }]);\n\nangular.module('uiRouterSample')\n.controller(\"alertController\" ,function ($scope, errors) {\n  $scope.alerts = function(){\n    return errors.getErrors()\n  };\n\n  $scope.addAlert = function() {\n    $scope.alerts.push({msg: \"Another alert!\"});\n  };\n\n  // $scope.closeAlert = function(index) {\n  //   $scope.alerts.splice(index, 1);\n  // };\n\n  $scope.closeAlert = function(index) {\n    errors.popLast();\n  };\n\n})\nangular.module('uiRouterSample')\n.controller(\"blogController\" ,function ($scope, $state, blogFactory) {\n    console.log(\"Hello from blog Controller\")\n\n    var map = new Map()\nmap.set('John', 25)\nmap.set('Alice', 400)\n\nconsole.log(\"Map, \", map)   \n\n\n    //textAngular\n\n    $scope.note = {\n        id: 0,\n        title: \"Title goes here\",\n        body: '<b>Press Back and Forward to simulate loading a new note</b><div><b><br/></b></div><div><img src=\"http://puppydogweb.com/gallery/puppies/labradorretriever2.jpg\"/><b><br/></b></div>'\n    }\n\n    var handleThis = function(data){\n        console.log(\"Handling....\", data[0])\n        $scope.note = data[0]\n    }\n\n    blogFactory.getMovies(handleThis)\n\n    $scope.funUpdate = function(data){\n        console.log(\"Well okay I guess...\", data)\n        // var obj = {_id: data}\n        blogFactory.updatePost(data)\n    }\n\n    ///CONTROLLER FOR LIST VIEW\n    //\n    //\n\n    $scope.postsList = []\n\n    var handleThis2 = function(data){\n        console.log(\"Handling....\", data)\n        $scope.postsList = data\n    }\n\n    blogFactory.getAllPosts(handleThis2)\n\n    $scope.funUpdate2 = function(data){\n        console.log(\"Well okay I guess...\", data)\n        // var obj = {_id: data}\n        blogFactory.updatePost(data)\n    }\n\n    $scope.findArticle = function(data){\n        console.log(\"You want me to look up...\", data)\n    }\n\n})\n\n\n.controller('blogController_individual', function ($scope, $state, $stateParams , blogFactory) {\n    console.log(\"Individual...?\", $stateParams)\n    var stateParams = $stateParams\n    $scope.postDetail;\n\n    var getPostSuccess_callback = function(data){\n        $scope.postDetail = data;\n    }\n\n    blogFactory.returnOne(stateParams, getPostSuccess_callback)\n\n\n    $scope.funUpdate = function(data){\n        console.log(\"Well okay I guess...\", data)\n        // var obj = {_id: data}\n        blogFactory.updatePost(data)\n    }\n\n})\n\n.controller('blogController_newPost', function ($scope, $state, $rootScope, blogFactory, errors) {\n    var loggedIn = $rootScope.loggedIn;\n    console.log(\"Time for a new post! Are you authorize!?\", loggedIn)\n    if(!loggedIn){\n        errors.addErr(\"danger\", \"You're not authorized to do that\")\n        $state.go(\"home\")\n    }\n\n    $scope.blogpost = {};\n\n\n\n})\n\n.factory('blogFactory', function($http, errors){\n    console.log(\"Hello from blog Factory\")\n    var movieList;\n    return {\n        saveMovie: function(movie, callback){\n            $http.post(\"secure/admin/movies\", movie)\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                // callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                // callback(data)\n                errors.addErr(\"danger\", data)\n            })\n        },\n        getMovies: function(callback){\n            $http.get(\"/blogposts\")\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                callback(data, status)\n            })\n        },\n        updatePost: function(blog){\n            console.log(\"Updating this : \", blog)\n            $http.post(\"/blogposts\", blog)\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                // callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                // callback(data)\n                // errors.addErr(\"danger\", data)\n            })\n\n        },\n        getAllPosts: function(callback){\n            $http.get(\"/blogposts\")\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                // callback(data, status)\n            })\n        },\n        returnOne: function(obj, callback){\n            console.log(\"Factory\", obj)\n            $http.post('/posts', obj)\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                callback(data, status)\n            })\n        }\n    }\n    })\n\nangular.module('uiRouterSample')\n.controller(\"dbController\" ,function ($scope, $state, movieFactory) {\n    console.log(\"Hello from dbController\")    \n\n    movieFactory.getMovies(handleSuccess)\n\n    function handleErrors(data, status){\n        console.log(\"Handler\", data, status)\n    }\n\n    function handleSuccess(data, status){\n        console.log(\"Success\")\n        $scope.movieList = data\n    }\n\n    $scope.movieList = [];\n\n\n    function handleSuccess2(data, status){\n        console.log(data, status)\n        $scope.movieList = data;\n    }\n\n    $scope.movieModel = {\n        title: \"\",\n        rating: \"XXX\"\n    }\n    $scope.AddMovie = function(){\n        console.log(\"ADDING\", $scope.movieModel )\n        movieFactory.saveMovie($scope.movieModel)\n    }\n\n    \n\n})\n\n.factory('movieFactory', function($http, errors){\n    console.log(\"Hello from movie Factory\")\n    var movieList;\n    return {\n        saveMovie: function(movie, callback){\n            $http.post(\"secure/admin/movies\", movie)\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                // callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                // callback(data)\n                errors.addErr(\"danger\", data)\n            })\n        },\n        getMovies: function(callback){\n            $http.get(\"secure/admin/movies\")\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                callback(data)\n            })\n            .error(function(data, status, headers, config){\n                console.log(\"Fail from factory \", data, status)\n                callback(data, status)\n            })\n        }\n    }\n    })\n\n\n angular.module('uiRouterSample')\n.directive('ngEnter', function () {\n    return function (scope, element, attrs) {\n        element.bind(\"keydown keypress\", function (event) {\n            if(event.which === 13) {\n                scope.$apply(function (){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});\nangular.module('uiRouterSample')\n\n    // A RESTful factory for retreiving contacts from 'contacts.json'\n  .factory('contacts', ['$http', function ($http, utils) {\n    var path = 'contacts.json';\n    var contacts = $http.get(path).then(function (resp) {\n      return resp.data.contacts;\n    });\n\n    var factory = {};\n    factory.all = function () {\n      return contacts;\n    };\n    factory.get = function (id) {\n      return contacts.then(function(){\n        return utils.findById(contacts, id);\n      })\n    };\n    return factory;\n  }])\n\n  .service('errors', function(){\n    var errArray = []\n    return {\n            getErrors:function () {\n                return errArray;\n            },\n            popLast: function(){\n              errArray.pop()\n            },\n            addErr: function(color, text){\n              errArray.pop()\n              errArray.push( {type: color, msg: text} )\n            }\n      }\n\n  })\n\n  .factory('utils', function () {\n\n    return {\n\n      // Util for finding an object by its 'id' property among an array\n      findById: function findById(a, id) {\n        for (var i = 0; i < a.length; i++) {\n          if (a[i].id == id) return a[i];\n        }\n        return null;\n      },\n\n      // Util for returning a randomKey from a collection that also isn't the current key\n      newRandomKey: function newRandomKey(coll, key, currentKey){\n        var randKey;\n        do {\n          randKey = coll[Math.floor(coll.length * Math.random())][key];\n        } while (randKey == currentKey);\n        return randKey;\n      }\n\n    };\n\n  });\nangular.module('uiRouterSample')\n.controller(\"loginController\" ,function ($scope, $rootScope, $state, $http, loginFactory) {\n    console.log(\"Hello from login controller\")\n    $scope.user;\n    $rootScope.loggedIn = false;\n    //Sets the scope if the user refreshes\n    $http.get('/api/user/').success(function(data) {\n        $scope.user = data;\n        console.log(\"Success grabbing user on refresh...\", data)\n        window.donuts = $scope.user\n        window.holes = $scope.loggedIn;\n        if(data !== \"\"){\n            $rootScope.loggedIn = true;\n            \n            console.log(\"Logged in!!!!\", $scope.loggedIn)\n        }\n    });\n    \n    $scope.credentials = {}\n\n    $scope.login = function(){\n        console.log(\"Logging in...\", $scope.credentials)\n        var handleSuccess = function(data){\n            console.log(\"Callback....\", data)\n            $scope.user = data;\n            if(data !== \"\"){\n                $rootScope.loggedIn = true\n                console.log(\"Logged in!!!\", $scope.loggedIn)\n            }\n            var element = document.getElementById(\"loginDropdown\")\n            angular.element(element).removeClass('open')\n        }\n        var credits = $scope.credentials\n        loginFactory.postLogin(credits, handleSuccess)\n    }\n\n    // function handleSuccess(data, status){\n    //     console.log(\"Success....\", data, status)\n    // }\n\n\n    $scope.logoutUser = function(){\n        console.log(\"So you want to log out...?\")\n        var handleSuccess = function(data){\n            console.log(\"Success on logout\")\n             $rootScope.loggedIn = false;\n        }\n        loginFactory.submitLogout(handleSuccess)\n    }\n\n    $scope.failedLogin = function(){\n        return loginFactory.returnLoginFailure();\n    }\n    \n\n});\n\nangular.module('uiRouterSample')\n    // A RESTful factory for retreiving contacts from 'contacts.json'\n\n.factory('loginFactory', function($http){\n    console.log(\"Hello from login Factory\")\n    var currentUser;\n    var errorMsg;\n    return {\n        postLogin: function(loginInfo, callback) {\n            console.log(\"POST DUDE\", loginInfo)\n            $http({\n                method: 'POST',\n                url: '/dmz/login',\n                // data: params,\n                params: loginInfo,\n                headers : { 'Content-Type': 'application/x-www-form-urlencoded' } \n            })\n            .success(function(data, status){\n                console.log(\"SUCCESS!!!\", data, status)\n                currentUser = data.user\n                callback(data.user)\n                errorMsg = \"\"\n            })\n            .error(function(data, status){\n                console.log(\"Failure...\", data, status)\n                errorMsg = \"Please try again\"\n            })\n        },\n        submitLogout: function(callback){\n            $http.get('/dmz/logout')\n            .success(function(data){\n                console.log(\"Success from factory \", data)\n                callback(data)\n            })\n        },\n        getCurrUser: function(){\n            return currentUser;\n        },\n        returnLoginFailure: function(){\n            return errorMsg;\n        }\n    }\n    })","var __moduleName = $__placeholder__0;"]}